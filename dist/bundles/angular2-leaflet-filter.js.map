{"version":3,"file":"angular2-leaflet-filter.js","sources":["../leaflet-filter/core/leaflet-filter.directive.js","../leaflet-filter/leaflet-filter.module.js"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\nimport '@asymmetrik/leaflet-filter';\nimport { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/angular2-leaflet';\nvar LeafletFilterDirective = (function () {\n    function LeafletFilterDirective(leafletDirective) {\n        // Constructor options for Filter Control\n        this.filterOptions = null;\n        // Event Emitter for filter state change events\n        this.filterStateChange = new EventEmitter();\n        // Event for when the filter control is created and ready\n        this.controlReady = new EventEmitter();\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletFilterDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.leafletDirective.init();\n        // Initialize the draw options (in case they weren't provided)\n        this.filterOptions = this.initializeFilterOptions(this.filterOptions);\n        // Create the control\n        this.filterControl = L.control.filter(this.filterOptions);\n        // Pull out the feature group for convenience\n        this.featureGroup = this.filterOptions.featureGroup;\n        // Add the control to the map\n        this.filterControl.addTo(this.leafletDirective.getMap());\n        // Register the main handler for events coming from the draw plugin\n        this.leafletDirective.getMap().on('filter:filter', function (e) {\n            setTimeout(function () { _this.filterStateChange.emit(e.geo); });\n        });\n        // Set the initial filter state\n        this.filterControl.setFilter(this.filterState);\n        // Fire control ready event\n        this.controlReady.emit(this.filterControl);\n    };\n    LeafletFilterDirective.prototype.ngOnChanges = function (changes) {\n        // Set the filter state\n        if (changes['filterState']) {\n            // Only want to set the filter if the control exists\n            if (null != this.filterControl) {\n                this.filterControl.setFilter(changes['filterState'].currentValue);\n            }\n        }\n    };\n    LeafletFilterDirective.prototype.initializeFilterOptions = function (options) {\n        // Ensure the options have a featureGroup\n        if (null == options) {\n            options = {\n                featureGroup: null\n            };\n        }\n        if (null == options.featureGroup) {\n            // No feature group was provided, so we're going to add it ourselves\n            options.featureGroup = L.featureGroup();\n            this.leafletDirective.getMap().addLayer(options.featureGroup);\n        }\n        return options;\n    };\n    return LeafletFilterDirective;\n}());\n__decorate([\n    Input('leafletFilterOptions'),\n    __metadata(\"design:type\", Object)\n], LeafletFilterDirective.prototype, \"filterOptions\", void 0);\n__decorate([\n    Input('leafletFilterState'),\n    __metadata(\"design:type\", Object)\n], LeafletFilterDirective.prototype, \"filterState\", void 0);\n__decorate([\n    Output('leafletFilterStateChange'),\n    __metadata(\"design:type\", Object)\n], LeafletFilterDirective.prototype, \"filterStateChange\", void 0);\n__decorate([\n    Output('leafletFilterControlReady'),\n    __metadata(\"design:type\", Object)\n], LeafletFilterDirective.prototype, \"controlReady\", void 0);\nLeafletFilterDirective = __decorate([\n    Directive({\n        selector: '[leafletFilter]'\n    }),\n    __metadata(\"design:paramtypes\", [LeafletDirective])\n], LeafletFilterDirective);\nexport { LeafletFilterDirective };\n\n//# sourceMappingURL=leaflet-filter.directive.js.map\n","import { NgModule } from '@angular/core';\nimport { LeafletFilterDirective } from './core/leaflet-filter.directive';\nvar LeafletFilterModule = (function () {\n    function LeafletFilterModule() {\n    }\n    return LeafletFilterModule;\n}());\nLeafletFilterModule = __decorate([\n    NgModule({\n        imports: [],\n        exports: [\n            LeafletFilterDirective\n        ],\n        declarations: [\n            LeafletFilterDirective\n        ],\n        providers: []\n    })\n], LeafletFilterModule);\nexport { LeafletFilterModule };\n\n//# sourceMappingURL=leaflet-filter.module.js.map\n"],"names":["EventEmitter","LeafletDirectiveWrapper","L.control","L.featureGroup","Input","Output","Directive","LeafletDirective","LeafletFilterModule","NgModule"],"mappings":"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"}